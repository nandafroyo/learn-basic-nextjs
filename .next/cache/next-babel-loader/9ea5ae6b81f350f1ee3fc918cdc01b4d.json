{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport BaseLayout from '../components/BaseLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Head from 'next/head';\n/*\nconst PostLink = (p) => (\n    <li key=\"${props.show.id}\">\n        <Link href=\"p/[id]\" as={`/p/${props.show.id}`} >\n            <a> {props.show.name} </a>\n        </Link>\n    </li>\n);\n*/\n\nvar Blog = function Blog(props) {\n  return __jsx(BaseLayout, null, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1025145633\"\n  }, \"Blog - Learn Basic Next.js\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Blog Page - Learn about Basic of Next.js\",\n    className: \"jsx-1025145633\"\n  })), __jsx(\"h1\", {\n    className: \"jsx-1025145633\"\n  }, \"Welcome to Blog Page\"), __jsx(\"ul\", {\n    className: \"jsx-1025145633\"\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      className: \"jsx-1025145633\"\n    }, __jsx(Link, {\n      href: \"p/[id]\",\n      as: \"/p/\".concat(show.id)\n    }, __jsx(\"a\", {\n      className: \"jsx-1025145633\"\n    }, \" \", show.name, \" \")));\n  })), __jsx(_JSXStyle, {\n    id: \"1025145633\"\n  }, [\"li.jsx-1025145633{margin-bottom:5px;}\", \"li.jsx-1025145633:last-child{margin-bottom:30px;}\", \"a.jsx-1025145633{-webkit-text-decoration:none;text-decoration:none;color:#333333;}\", \"a.jsx-1025145633:visited{color:#333333;}\", \"a.jsx-1025145633:hover{color:#000000;}\"]));\n};\n\nBlog.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"\".concat(data.length, \" data fetched!\"));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Blog;","map":null,"metadata":{},"sourceType":"module"}