{"ast":null,"code":"var _jsxFileName = \"/Users/rahadiyanyr/basic-nextjs/pages/blog.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport BaseLayout from '../components/BaseLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Head from 'next/head';\n/*\nconst PostLink = (p) => (\n    <li key=\"${props.show.id}\">\n        <Link href=\"p/[id]\" as={`/p/${props.show.id}`} >\n            <a> {props.show.name} </a>\n        </Link>\n    </li>\n);\n*/\n\nconst Blog = props => __jsx(BaseLayout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, __jsx(Head, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}, __jsx(\"title\", {\n  className: \"jsx-2257532802\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }\n}, \"Blog - Learn Basic Next.js\"), __jsx(\"meta\", {\n  name: \"description\",\n  content: \"Blog Page - Learn about Basic of Next.js\",\n  className: \"jsx-2257532802\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n})), __jsx(\"h1\", {\n  className: \"jsx-2257532802\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, \"Welcome to Blog Page\"), __jsx(\"ul\", {\n  className: \"jsx-2257532802\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: \"jsx-2257532802\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 17\n  }\n}, __jsx(Link, {\n  href: \"p/[id]\",\n  as: `/p/${show.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-2257532802\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }\n}, \" \", show.name, \" \"))))), __jsx(_JSXStyle, {\n  id: \"2257532802\",\n  __self: this\n}, \"li.jsx-2257532802{margin-bottom:5px;}a.jsx-2257532802{-webkit-text-decoration:none;text-decoration:none;color:#333333;}a.jsx-2257532802:visited{color:#333333;}a.jsx-2257532802:hover{color:#000000;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWhhZGl5YW55ci9iYXNpYy1uZXh0anMvcGFnZXMvYmxvZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQ29CLEFBR21DLEFBSUcsQUFLUCxBQUlBLGNBSGxCLEFBSUEsSUFiQSxnQ0FJa0IsY0FDbEIiLCJmaWxlIjoiL1VzZXJzL3JhaGFkaXlhbnlyL2Jhc2ljLW5leHRqcy9wYWdlcy9ibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJhc2VMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9CYXNlTGF5b3V0J1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnXG5cbi8qXG5jb25zdCBQb3N0TGluayA9IChwKSA9PiAoXG4gICAgPGxpIGtleT1cIiR7cHJvcHMuc2hvdy5pZH1cIj5cbiAgICAgICAgPExpbmsgaHJlZj1cInAvW2lkXVwiIGFzPXtgL3AvJHtwcm9wcy5zaG93LmlkfWB9ID5cbiAgICAgICAgICAgIDxhPiB7cHJvcHMuc2hvdy5uYW1lfSA8L2E+XG4gICAgICAgIDwvTGluaz5cbiAgICA8L2xpPlxuKTtcbiovXG5cbmNvbnN0IEJsb2cgPSAocHJvcHMpID0+IChcbiAgICA8QmFzZUxheW91dD5cbiAgICAgICAgPEhlYWQ+XG4gICAgICAgICAgICA8dGl0bGU+QmxvZyAtIExlYXJuIEJhc2ljIE5leHQuanM8L3RpdGxlPlxuICAgICAgICAgICAgPG1ldGEgbmFtZT1cImRlc2NyaXB0aW9uXCIgY29udGVudD1cIkJsb2cgUGFnZSAtIExlYXJuIGFib3V0IEJhc2ljIG9mIE5leHQuanNcIi8+XG4gICAgICAgIDwvSGVhZD5cblxuICAgICAgICA8aDE+V2VsY29tZSB0byBCbG9nIFBhZ2U8L2gxPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxuICAgICAgICAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxuICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwicC9baWRdXCIgYXM9e2AvcC8ke3Nob3cuaWR9YH0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGE+IHtzaG93Lm5hbWV9IDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cblxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICAgICAgY29sb3I6ICMzMzMzMzM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGE6dmlzaXRlZCB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICMzMzMzMzM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGE6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgPC9CYXNlTGF5b3V0PlxuKVxuXG5CbG9nLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpXG5cbiAgICBjb25zb2xlLmxvZyhgJHtkYXRhLmxlbmd0aH0gZGF0YSBmZXRjaGVkIWApXG5cbiAgICByZXR1cm4ge1xuICAgICAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJsb2c7Il19 */\\n/*@ sourceURL=/Users/rahadiyanyr/basic-nextjs/pages/blog.js */\"));\n\nBlog.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`${data.length} data fetched!`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/rahadiyanyr/basic-nextjs/pages/blog.js"],"names":["BaseLayout","Link","fetch","Head","Blog","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA;;;;;;;;;;AAUA,MAAMC,IAAI,GAAIC,KAAD,IACT,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAM,EAAA,IAAI,EAAC,aAAX;AAAyB,EAAA,OAAO,EAAC,0CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,QAAX;AAAoB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAKD,IAAI,CAACE,IAAV,MADJ,CADJ,CADH,CADL,CAPJ;AAAA;AAAA;AAAA,quFADJ;;AAuCAN,IAAI,CAACO,eAAL,GAAuB,kBAAkB;AACrC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAEH,IAAI,CAACI,MAAO,gBAA3B;AAEA,SAAO;AACHX,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASW,KAAK,IAAIA,KAAK,CAACV,IAAxB;AADJ,GAAP;AAGH,CATD;;AAWA,eAAeJ,IAAf","sourcesContent":["import BaseLayout from '../components/BaseLayout'\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'\nimport Head from 'next/head'\n\n/*\nconst PostLink = (p) => (\n    <li key=\"${props.show.id}\">\n        <Link href=\"p/[id]\" as={`/p/${props.show.id}`} >\n            <a> {props.show.name} </a>\n        </Link>\n    </li>\n);\n*/\n\nconst Blog = (props) => (\n    <BaseLayout>\n        <Head>\n            <title>Blog - Learn Basic Next.js</title>\n            <meta name=\"description\" content=\"Blog Page - Learn about Basic of Next.js\"/>\n        </Head>\n\n        <h1>Welcome to Blog Page</h1>\n        <ul>\n            {props.shows.map(show => (\n                <li key={show.id}>\n                    <Link href=\"p/[id]\" as={`/p/${show.id}`} >\n                        <a> {show.name} </a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n\n        <style jsx>{`\n            li {\n                margin-bottom: 5px;\n            }\n\n            a {\n                text-decoration: none;\n                color: #333333;\n            }\n\n            a:visited {\n                color: #333333;\n            }\n\n            a:hover {\n                color: #000000;\n            }\n        `}</style>\n    </BaseLayout>\n)\n\nBlog.getInitialProps = async function () {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n    const data = await res.json()\n\n    console.log(`${data.length} data fetched!`)\n\n    return {\n        shows: data.map(entry => entry.show)\n    }\n}\n\nexport default Blog;"]},"metadata":{},"sourceType":"module"}