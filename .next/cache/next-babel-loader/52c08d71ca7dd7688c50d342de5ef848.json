{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/rahadiyanyr/basic-nextjs/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport BaseLayout from '../../components/BaseLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Head from 'next/head';\nexport default function Post() {\n  var router = useRouter();\n  var _this$props$show = this.props.show,\n      show = _this$props$show === void 0 ? {} : _this$props$show;\n  var summary = show.summary && show.summary.replace(/<[/]?(p|b)>/g, '');\n  var image = show.image && show.image.medium;\n  return __jsx(BaseLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, show.name, \" - Detail Page\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: summary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, show.name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, summary), __jsx(\"img\", {\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n}\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/rahadiyanyr/basic-nextjs/pages/p/[id].js"],"names":["useRouter","BaseLayout","fetch","Head","Post","router","props","show","summary","replace","image","medium","name","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAD6B,yBAEP,KAAKM,KAFE,CAErBC,IAFqB;AAAA,MAErBA,IAFqB,iCAEd,EAFc;AAG7B,MAAMC,OAAO,GAAGD,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACC,OAAL,CAAaC,OAAb,CAAqB,cAArB,EAAqC,EAArC,CAAhC;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACG,KAAL,CAAWC,MAAvC;AAEA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,IAAI,CAACK,IAAb,mBADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEJ,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACK,IAAV,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,OAAJ,CAPF,EAQE;AAAK,IAAA,GAAG,EAAEE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAaD;;AAEDN,IAAI,CAACS,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,2CAEHb,KAAK,wCAAiCa,EAAjC,EAFF;;AAAA;AAEfE,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfX,UAAAA,IAHe;AAKrBY,UAAAA,OAAO,CAACC,GAAR,yBAA6Bb,IAAI,CAACK,IAAlC;AALqB,2CAOd;AAAEL,YAAAA,IAAI,EAAJA;AAAF,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { useRouter } from 'next/router'\nimport BaseLayout from '../../components/BaseLayout'\nimport fetch from 'isomorphic-unfetch'\nimport Head from 'next/head'\n\nexport default function Post() {\n  const router = useRouter();\n  const { show = {} } = this.props\n  const summary = show.summary && show.summary.replace(/<[/]?(p|b)>/g, '')\n  const image = show.image && show.image.medium;\n\n  return (\n    <BaseLayout>\n      <Head>\n        <title>{show.name} - Detail Page</title>\n        <meta name=\"description\" content={summary}/>\n      </Head>\n\n      <h1>{show.name}</h1>\n      <p>{summary}</p>\n      <img src={image} />\n\n    </BaseLayout>\n  )\n}\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  return { show };\n};"]},"metadata":{},"sourceType":"module"}